rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }
    
    // Favorites
    match /favorites/{favoriteId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Chats (chat rooms)
    match /chats/{chatId} {
      // Anyone who is a participant can read the chat
      allow read: if request.auth != null && request.auth.uid in resource.data.participants;
      
      // Anyone authenticated can create a chat (you may want to restrict this further)
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;
      
      // Only participants can update chat metadata
      allow update: if request.auth != null && request.auth.uid in resource.data.participants;
      
      // Messages in a chat
      match /messages/{messageId} {
        // Anyone who can read the parent chat can read messages
        allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        
        // Only the message sender can create messages
        allow create: if request.auth != null && 
                       request.auth.uid == request.resource.data.senderId &&
                       request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      }
    }
  }
}